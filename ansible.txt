
sudo apt-get install nmap
sudo apt-get istall net-tools

---------------------
[install for both machine] 

sudo apt install openssh-server
sudo systemctl status ssh 
-->[check-server should be open for both]
sudo apt update
------------------------------
setting
network

attached->Bridge Adapter [network for machine}
------------------------------------
$ssh-keygen [generate key]

$ssh-copy-id krishna@192.168.1.7

ssh krishna@192.168.1.7

exit


sudo gedit /etc/ansbile/hosts 
       ||       
       ||
       \/
       192.168.10.10 ansible_user=node  

ansible all -m ping [Testing Connectivity to Nodes]
----------------------------------
$ sudo apt update  
$ sudo apt install software-properties-common
$ sudo add-apt-repository --yes --update ppa:ansible/ansible
$ sudo apt install ansible


ansible thbs_solutions -m shell -a 'uname -a'  -i myInvetory.txt....
   [create connection between external node .m denotes module ,i denotes inventory]


[Install apache2 command]
- name: Install apache httpd  (state=present is optional)apt:name: apache2state: present

ansible.builtin.apt – Manages apt-packages — Ansible Documentation

ansible thbs_solution -m apt -a 'name=apache2 state=present' -i myInventory.txt -b --ask-pass
-----------------------------------------------------

---# ansible -m file -a 'path=/tmp/krishna.txt state=present' all 
       [created krishna.txt in node machine]

# YAML - yet another markup lang
---
- name: create at new file and delete it. [playbook format]
  hosts: all  
  tasks:    
   - name: create username file in tmp directory  
     file:        
       path: '/tmp/krishna.txt'        
       state: touch

# touch hello.yml   [ways to create yml file]
# gedit or vi hello.yml [way to edit]
# :wq
#
 ansible-playbook hello.yml -k [to execute playbook]

installing apache2

- name: install httpd packages and update sample webpage and start service

  hosts: all

  become: yes # root user going to excute



  tasks:

    - name: Update all packages to their latest version

      apt:

        name: "*"

        state: latest



    - name: Install apache2 httpd  (state=present is optional)

      apt:

        name: apache2

        state: present



    - name: Copy index test page

      copy:

        src: "index.html"

        dest: "/var/www/index.html"

        force: yes



    - name: Restart Apache

      service:

        name: apache2

        state: restarted
---------------------------------------------



  - name: learning handler concept

  hosts: all

  become: yes



  tasks:

    - name: Install apache httpd  (state=present is optional)

      apt:

        name: apache2

        state: present



    - name: display apche configs

      shell:

        cmd: ls -la | grep /var/www/html



    # - name: now install and config done

    #   shell: ls -la

    #   notify:

    #     - restart apache again



''  handlers:     [if every tasks work fine handler will be executed]
''
    - name: restart apache again

      service:

        name: apache2

        state: restarted

''''''  roles''''
  
///cd test-playbook

   ansible-galaxy init roles [which create roles]



